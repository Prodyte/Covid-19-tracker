{"version":3,"sources":["components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/covid-19.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","props","data","confirmed","deaths","lastUpdate","recovered","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterbottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableurl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","LineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","SetFetchedCountries","FetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchdata","setState","this","image","src","CoronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9dd437e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import {Card, CardContent, Typography, Grid} from '@material-ui/core'\nimport styles from './Cards.module.css'\nimport Countup from 'react-countup'\nimport cx from 'classnames';\n\nfunction Cards(props) {\n    const {confirmed, deaths, lastUpdate, recovered} = props.data;\n    if(!confirmed){\n        return \"....Loading\"\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterbottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <Countup start={0} end={confirmed.value} duration={2.5} seperator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\" gutterbottom>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Active Cases of Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterbottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                        <Countup start={0} end={recovered.value} duration={2.5} seperator=\",\"/>\n                            </Typography>\n                        <Typography color=\"textSecondary\" gutterbottom>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterbottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                        <Countup start={0} end={deaths.value} duration={2.5} seperator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\" gutterbottom>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Dearhs Caused by Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport async function fetchData(country){\n    let  changeableurl = url;\n    if (country){\n        changeableurl = `${url}/countries/${country}`\n    }\n    try{\n        const {data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableurl);\n        return {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate,\n        }\n    }\n    catch(error){\n        console.log(error)\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) => (\n            {\n                confirmed: dailyData.confirmed.total,\n                deaths: dailyData.deaths.total,\n                date:  dailyData.reportDate,\n            }\n        ));\n\n        return modifiedData;\n    }\n    catch (error){\n        console.log(error)\n    }\n} \n\nexport const countries = async () => {\n    try {\n        const {data: {countries}} = await axios.get(`${url}/countries`);\n        \n        return countries.map((country) => country.name)\n\n\n    }\n    catch (error){\n        console.log(error)\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { line, Bar, Line } from \"react-chartjs-2\";\nimport styles from \"./Charts.module.css\";\n\nconst Chart = ({ data, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n  const LineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            borderColor: \"rgba(255, 0,0 ,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  console.log(data.recovered, country);\n\n  const barChart = data.confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"people\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [\n              data.confirmed.value,\n              data.recovered.value,\n              data.deaths.value,\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current State in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : LineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core'\nimport styles from './CountryPicker.module.css'\nimport {countries} from '../../api'\n\nfunction CountryPicker({handleCountryChange}){\n    const [fetchedCountries, SetFetchedCountries] = useState([  ])\n    useEffect(() => {\n        const FetchCountries = async () => {\n            SetFetchedCountries(await countries())\n        }\n        FetchCountries();\n    }, [SetFetchedCountries])\n    return (\n        <div>\n            <FormControl className={styles.formControl}>\n                <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                    <option value=\"global\"></option>\n                    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n                </NativeSelect>\n            </FormControl>\n        </div>\n    )\n}\n\nexport default CountryPicker;       ","export default __webpack_public_path__ + \"static/media/covid-19.a91b78d9.png\";","import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api/index\";\nimport CoronaImage from \"./images/covid-19.png\";\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchdata = await fetchData();\n    this.setState({ data: fetchdata });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchdata = await fetchData(country);\n    this.setState({ data: fetchdata, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={CoronaImage} alt=\"COVID\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './App';\n\nReactDom.render(<App/>, document.getElementById('root') );          ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}